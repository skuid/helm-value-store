# Any sections defined here will be merged into the default sections
# ALL SECTION NAMES MUST BE LOWERCASE! Viper assumes all configs are lowercase
[sections]
features = ["feature"]
documentation = ["docs"]
"stylistic changes" = ["style"]
refactor = ["refactor"]
chore = ["chore"]
configuration = ["config"]
"performance improvements" = ["perf"]

[clog]
order = ["features", "bug fixes", "documentation", "refactor", "chore", "configuration", "performance improvements", "breaking changes"]

# A repository link with the trailing '.git' which will be used to generate
# all commit and issue links
repository = "https://github.com/skuid/spec"

# A constant release title
#subtitle = "my awesome title"

# specify the style of commit links to generate, defaults to "github" if omitted
link-style = "github"

# The preferred way to set a constant changelog. This file will be read for old changelog
# data, then prepended to for new changelog data. It's the equivilant to setting
# both infile and outfile to the same file.
#
# Do not use with outfile or infile fields!
#
# Defaults to stdout when omitted
#changelog = "mychangelog.md"

# This sets an output file only! If it exists already, new changelog data will be
# prepended, if not it will be created.
#
# This is useful in conjunction with the infile field if you have a separate file
# that you would like to append after newly created clog data
#
# Defaults to stdout when omitted
#outfile = "MyChangelog.md"

# This sets the input file old! Any data inside this file will be appended to any
# new data that clog picks up
#
# This is useful in conjunction with the outfile field where you may wish to read
# from one file and append that data to the clog output in another
#infile = "My_old_changelog.md"

# This sets the output format. There are two options "json" or "markdown" and
# defaults to "markdown" when omitted
output-format = "markdown"

# If you use tags, you can set the following if you wish to only pick
# up changes since your latest tag
#from-latest-tag = true
